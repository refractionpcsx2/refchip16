#ifndef _SHADERS_H
#define _SHADERS_H

/*Thanks to the twokings tutorial for this one*/
const char* vertexshade = "// Vertex shader input structure\n"
"struct VS_INPUT\n"
"{\n"
"    float4 Position   : POSITION;\n"
"    float4 Color    : COLOR0;\n"
"};\n"
"\n"
"\n"
"// Vertex shader output structure\n"
"struct VS_OUTPUT\n"
"{\n"
"    float4 Position   : POSITION;\n"
"    float4 Color    : COLOR0;\n"
"};\n"
"\n"
"\n"
"// Global variables\n"
"float4x4 WorldViewProj;\n"
"\n"
"\n"
"// Name: Simple Vertex Shader\n"
"// Type: Vertex shader\n"
"// Desc: Vertex transformation and texture coord pass-through\n"
"//\n"
"VS_OUTPUT vs_main( in VS_INPUT VSIn )\n"
"{\n"
"    VS_OUTPUT VSOut;                      //create an output vertex\n"
"\n"
"    VSOut.Position = mul(VSIn.Position,\n"
"                       WorldViewProj);  //apply vertex transformation\n"
"    VSOut.Color  = VSIn.Color;          //copy original texcoords\n"
"\n"
"    return VSOut;                         //return output vertex\n"
"}\n";

const char* pixelshade = "// Pixel shader input structure\n"
"struct PS_INPUT\n"
"{\n"
"    float4 Color    : COLOR0;\n"
"};\n"
"\n"
"\n"
"// Vertex shader output structure\n"
"struct PS_OUTPUT\n"
"{\n"
"    float4 Color    : COLOR0;\n"
"};\n"
"\n"
"\n"
"// Name: Simple Pixel Shader\n"
"// Type: Pixel shader\n"
"// Desc: Pixel color pass-through\n"
"//\n"
"PS_OUTPUT ps_main( in PS_INPUT PSIn )\n"
"{\n"
"    PS_OUTPUT PSOut;                      //create an output vertex\n"
"\n"
"    PSOut.Color  = PSIn.Color;          //copy original color\n"
"\n"
"    return PSOut;                         //return output vertex\n"
"}\n";
#endif